'use strict';/* Controllers */var COUNT = 3;function getImgStruct(data) {	var e = data;	e.author = e.author ? 'Автор: ' + e.author : '';	var l_id = e.id.toLocaleLowerCase();	e.url = 'http://risovalka.zzzae.biz/g/'+l_id[0]+'/'+l_id[1]+'/'+l_id[2]+'/'+e.id+'_th.png';	return e;}function zzzaebizController($scope, $http) {	$scope.imgs = [];	$http.get('http://r.zzzae.biz/kts.php?l='+COUNT).success(function(data) {	for(var i=0; i<data.length; i++) { 		$scope.imgs.push(getImgStruct(data[i]));	}	});}function LoadController($scope, $http) {	$http.get('./lib/opt.dat').success(function(data) {		$scope.settings = data;				var settings = JSON.parse(localStorage['settings']);		for(var i=0; i<$scope.settings.styles.length; i++) {			$scope.settings.styles[i].active = ($scope.settings.styles[i].color == settings.style) ? 'checked' : '';		}		for(var i=0; i<$scope.settings.scripts.length; i++) {			$scope.settings.scripts[i].enabled = (settings.userjs[$scope.settings.scripts[i].id]) ? 'checked' : '';		}		for(var i=0; i<$scope.settings.notifications.xRace.length; i++) {			$scope.settings.notifications.xRace[i].checked = (settings.notifications[$scope.settings.notifications.xRace[i].value]) ? 'checked' : '';			$scope.settings.notifications.xRace[i].disabled = (settings.notifications.timeout < 1) ? 'disabled' : '';		}		for(var i=0; i<$scope.settings.notifications.special.length; i++) {			$scope.settings.notifications.special[i].checked = (settings.notifications[$scope.settings.notifications.special[i].value]) ? 'checked' : '';		}		for(var i=0; i<$scope.settings.notifications.xRaceTimer.length; i++) {			$scope.settings.notifications.xRaceTimer[i].checked = (settings.notifications.timeout.toString() == $scope.settings.notifications.xRaceTimer[i].value.toString()) ? 'selected' : '';		}	});}